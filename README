============== -*- outline -*- ==============

                    ReadMe
2010/06  morimoto
=============================================

* What is tiny-make ?

	Creating Makefile is troublesome for me in any project =)
	And in my point of view, Linux Makefile system seems very useful.
	I created this tiny-make as tiny version of it.

	If you use tiny-make, your Makefile will be

	----------------------
	 OBJ	+= err.o version.o
	----------------------

	It is very easy and tiny don't you ?

* Where is tiny-make ?

	you can get it from

	git clone git://github.com/morimoto/tiny-make.git

* License

	This library is free software; you can redistribute it and/or
	modify it under the terms of the GNU Lesser General Public
	License as published by the Free Software Foundation; either
	version 2.0 of the License, or later version.

	This library is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	Lesser General Public License for more details.

	You should have received a copy of the GNU Lesser General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

* How to use tiny-make ?

	At first, you can try tiny-make in here.
	To try it, below files are needed.

		./.config
		./script/Makefile.local

	You can create these from sample.xxx,
	and modify it.
	Next, you can run

		> make

	This "make" is sample work of tiny-make.
	               ^^^^^^^^^^^

	If you want to use this tiny-make, run

		> create-tiny-make.sh

	You can get tiny-make-vA.B.tar.bz2 which includes tiny-make files.
	You can use it to your system.

* Makefile

	you can use below variables on each Makefile

	OBJ		: compile target
	SUBDIR		: compile target sub directory
	INDEPENDENT	: compile target sub directory which is independent from SUBDIR
	SCRIPT		: it is the script which runs before OBJ is compiled
	TARGET		: target object which build from OBJ
	MYTARGET	: user own target. user need to create rules by yourself
	LINCLUDE	: The include dir which you need.
	LIBRARY		: necessary library. -lxxx style
	EXTR		: extra option ex) -static
	${TINY-MAKE}/script/Makefile.XXX are main Mailfiles.
	You can create system dependency Makefile as ${TINY-MAKE}/Makefile.local

* .config

	User defined config file.
	It is depend on your system

* Makefile.local

	Makefile for your own system.
	This file is loaded from Makefile.common
